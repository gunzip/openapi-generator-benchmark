/**
 * This file was auto-generated by openapi-typescript-server@0.0.11.
 * Do not make direct changes to the file.
 */

import type { paths } from "./schema.d.ts";
import type { Route } from "openapi-typescript-server-runtime";
import { NotImplementedError } from "openapi-typescript-server-runtime";

export interface TestMultipleSuccessArgs<Req, Res> {
  parameters: paths['/test-multiple-success']['post']['parameters'];
  contentType: string;
  req: Req;
  res: Res;
  requestBody: {
    mediaType: "application/json";
    content: paths['/test-multiple-success']['post']['requestBody']['content']['application/json']
  }
  | {
    mediaType: "application/x-www-form-urlencoded";
    content: paths['/test-multiple-success']['post']['requestBody']['content']['application/x-www-form-urlencoded']
  }
  ;
}

interface TestMultipleSuccessResult200 {
  content: { 200: paths['/test-multiple-success']['post']['responses']['200']['content'] };
  headers?: { [name: string]: any };
}

interface TestMultipleSuccessResult403 {
  content: { 403: paths['/test-multiple-success']['post']['responses']['403']['content'] };
  headers?: { [name: string]: any };
}

interface TestMultipleSuccessResult404 {
  content: { 404: paths['/test-multiple-success']['post']['responses']['404']['content'] };
  headers?: { [name: string]: any };
}

export type TestMultipleSuccessResult = Promise<TestMultipleSuccessResult200 | TestMultipleSuccessResult403 | TestMultipleSuccessResult404>;

export async function testMultipleSuccessUnimplemented(): TestMultipleSuccessResult {
  throw new NotImplementedError()
}

export interface Server<Req = unknown, Res = unknown> {
  testMultipleSuccess: (
    args: TestMultipleSuccessArgs<Req, Res>
  ) => TestMultipleSuccessResult;
}

export function registerRouteHandlers<Req, Res>(server: Server<Req, Res>): Route[] {
  return [
    {
      method: "post",
      path: "/test-multiple-success",
      handler: server.testMultipleSuccess as Route["handler"],
    },
  ]
}
