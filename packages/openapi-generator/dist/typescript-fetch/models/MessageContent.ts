/* tslint:disable */
/* eslint-disable */
/**
 * Test API
 * Test API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageContent
 */
export interface MessageContent {
    /**
     * The (optional) subject of the message - note that only some notification
     * channels support the display of a subject. When a subject is not provided,
     * one gets generated from the client attributes.
     * @type {string}
     * @memberof MessageContent
     */
    subject?: string;
    /**
     * The full version of the message, in plain text or Markdown format. The
     * content of this field will be delivered to channels that don't have any
     * limit in terms of content size (e.g. email, etc...).
     * @type {string}
     * @memberof MessageContent
     */
    markdown: string;
}

/**
 * Check if a given object implements the MessageContent interface.
 */
export function instanceOfMessageContent(value: object): value is MessageContent {
    if (!('markdown' in value) || value['markdown'] === undefined) return false;
    return true;
}

export function MessageContentFromJSON(json: any): MessageContent {
    return MessageContentFromJSONTyped(json, false);
}

export function MessageContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContent {
    if (json == null) {
        return json;
    }
    return {
        
        'subject': json['subject'] == null ? undefined : json['subject'],
        'markdown': json['markdown'],
    };
}

export function MessageContentToJSON(value?: MessageContent | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subject': value['subject'],
        'markdown': value['markdown'],
    };
}

