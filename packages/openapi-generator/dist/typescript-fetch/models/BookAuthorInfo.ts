/* tslint:disable */
/* eslint-disable */
/**
 * Test API
 * Test API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PersonAddress } from './PersonAddress';
import {
    PersonAddressFromJSON,
    PersonAddressFromJSONTyped,
    PersonAddressToJSON,
} from './PersonAddress';

/**
 * 
 * @export
 * @interface BookAuthorInfo
 */
export interface BookAuthorInfo {
    /**
     * name of the person
     * @type {string}
     * @memberof BookAuthorInfo
     */
    name?: string;
    /**
     * 
     * @type {PersonAddress}
     * @memberof BookAuthorInfo
     */
    address?: PersonAddress;
    /**
     * 
     * @type {Date}
     * @memberof BookAuthorInfo
     */
    birth?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BookAuthorInfo
     */
    death?: Date;
    /**
     * 
     * @type {number}
     * @memberof BookAuthorInfo
     */
    age?: BookAuthorInfoAgeEnum;
    /**
     * 
     * @type {string}
     * @memberof BookAuthorInfo
     */
    zipCode?: string;
}


/**
 * @export
 */
export const BookAuthorInfoAgeEnum = {
    NUMBER_20: 20,
    NUMBER_40: 40,
    NUMBER_50: 50
} as const;
export type BookAuthorInfoAgeEnum = typeof BookAuthorInfoAgeEnum[keyof typeof BookAuthorInfoAgeEnum];


/**
 * Check if a given object implements the BookAuthorInfo interface.
 */
export function instanceOfBookAuthorInfo(value: object): value is BookAuthorInfo {
    return true;
}

export function BookAuthorInfoFromJSON(json: any): BookAuthorInfo {
    return BookAuthorInfoFromJSONTyped(json, false);
}

export function BookAuthorInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookAuthorInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'address': json['address'] == null ? undefined : PersonAddressFromJSON(json['address']),
        'birth': json['birth'] == null ? undefined : (new Date(json['birth'])),
        'death': json['death'] == null ? undefined : (new Date(json['death'])),
        'age': json['age'] == null ? undefined : json['age'],
        'zipCode': json['zipCode'] == null ? undefined : json['zipCode'],
    };
}

export function BookAuthorInfoToJSON(value?: BookAuthorInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'address': PersonAddressToJSON(value['address']),
        'birth': value['birth'] == null ? undefined : ((value['birth']).toISOString()),
        'death': value['death'] == null ? undefined : ((value['death']).toISOString().substring(0,10)),
        'age': value['age'],
        'zipCode': value['zipCode'],
    };
}

