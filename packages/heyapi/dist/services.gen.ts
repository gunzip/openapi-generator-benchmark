// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { TestAuthBearerData, TestAuthBearerResponse, TestAuthBearerHttpData, TestAuthBearerHttpResponse, TestSimpleTokenData, TestSimpleTokenResponse, TestMultipleSuccessResponse, TestFileUploadData, TestFileUploadResponse, TestBinaryFileUploadData, TestBinaryFileUploadResponse, TestBinaryFileDownloadResponse, TestResponseHeaderResponse, TestParameterWithReferenceData, TestParameterWithReferenceResponse, TestParameterWithBodyReferenceData, TestParameterWithBodyReferenceResponse, PutTestParameterWithBodyReferenceData, PutTestParameterWithBodyReferenceResponse, TestParameterWithDashData, TestParameterWithDashResponse, TestParameterWithDashAnUnderscoreData, TestParameterWithDashAnUnderscoreResponse, TestWithTwoParamsData, TestWithTwoParamsResponse, TestParametersAtPathLevelData, TestParametersAtPathLevelResponse, TestSimplePatchResponse, TestCustomTokenHeaderResponse, TestWithEmptyResponseResponse, TestParamWithSchemaRefData, TestParamWithSchemaRefResponse, TestHeaderWithSchemaRefData, TestHeaderWithSchemaRefResponse, TestHeaderOptionalData, TestHeaderOptionalResponse, TestDatesResponse } from './types.gen';

/**
 * @param data The data for the request.
 * @param data.qr
 * @param data.qo
 * @param data.cursor An opaque identifier that points to the next item in the collection.
 * @returns unknown Will send `Authenticated`
 * @throws ApiError
 */
export const testAuthBearer = (data: TestAuthBearerData): CancelablePromise<TestAuthBearerResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-auth-bearer',
    query: {
        qo: data.qo,
        qr: data.qr,
        cursor: data.cursor
    },
    errors: {
        403: 'You do not have necessary permissions for the resource'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.qr
 * @param data.qo
 * @param data.cursor An opaque identifier that points to the next item in the collection.
 * @returns unknown Will send `Authenticated`
 * @throws ApiError
 */
export const testAuthBearerHttp = (data: TestAuthBearerHttpData): CancelablePromise<TestAuthBearerHttpResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-auth-bearer-http',
    query: {
        qo: data.qo,
        qr: data.qr,
        cursor: data.cursor
    },
    errors: {
        403: 'You do not have necessary permissions for the resource'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.qr
 * @param data.qo
 * @param data.cursor An opaque identifier that points to the next item in the collection.
 * @returns unknown Will send `Authenticated`
 * @throws ApiError
 */
export const testSimpleToken = (data: TestSimpleTokenData): CancelablePromise<TestSimpleTokenResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-simple-token',
    query: {
        qo: data.qo,
        qr: data.qr,
        cursor: data.cursor
    },
    errors: {
        403: 'You do not have necessary permissions for the resource'
    }
}); };

/**
 * @returns Message Will return a Message
 * @returns unknown Will return just accepted
 * @throws ApiError
 */
export const testMultipleSuccess = (): CancelablePromise<TestMultipleSuccessResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-multiple-success',
    errors: {
        403: 'You do not have necessary permissions for the resource',
        404: 'Not found'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.formData
 * @returns unknown File uploaded
 * @throws ApiError
 */
export const testFileUpload = (data: TestFileUploadData): CancelablePromise<TestFileUploadResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/test-file-upload',
    formData: data.formData,
    mediaType: 'multipart/form-data'
}); };

/**
 * @param data The data for the request.
 * @param data.formData
 * @returns unknown File uploaded
 * @throws ApiError
 */
export const testBinaryFileUpload = (data: TestBinaryFileUploadData): CancelablePromise<TestBinaryFileUploadResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/test-binary-file-upload',
    formData: data.formData,
    mediaType: 'multipart/form-data'
}); };

/**
 * @returns binary Some success response
 * @throws ApiError
 */
export const testBinaryFileDownload = (): CancelablePromise<TestBinaryFileDownloadResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-binary-file-download'
}); };

/**
 * @returns Message Will create a Message
 * @throws ApiError
 */
export const testResponseHeader = (): CancelablePromise<TestResponseHeaderResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-response-header',
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.requestId
 * @returns unknown Created
 * @throws ApiError
 */
export const testParameterWithReference = (data: TestParameterWithReferenceData = {}): CancelablePromise<TestParameterWithReferenceResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/test-parameter-with-reference',
    query: {
        'request-id': data.requestId
    },
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export const testParameterWithBodyReference = (data: TestParameterWithBodyReferenceData = {}): CancelablePromise<TestParameterWithBodyReferenceResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/test-parameter-with-body-ref',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export const putTestParameterWithBodyReference = (data: PutTestParameterWithBodyReferenceData = {}): CancelablePromise<PutTestParameterWithBodyReferenceResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/put-test-parameter-with-body-ref',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.pathParam
 * @param data.headerInlineParam
 * @param data.xHeaderParam A header param which has dashes in it
 * @param data.fooBar
 * @param data.requestId
 * @returns unknown Ok
 * @throws ApiError
 */
export const testParameterWithDash = (data: TestParameterWithDashData): CancelablePromise<TestParameterWithDashResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-parameter-with-dash/{path-param}',
    path: {
        'path-param': data.pathParam
    },
    headers: {
        headerInlineParam: data.headerInlineParam,
        'x-header-param': data.xHeaderParam
    },
    query: {
        'foo-bar': data.fooBar,
        'request-id': data.requestId
    },
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.pathParam
 * @param data.headerInlineParam
 * @param data.xHeaderParam A header param which has dashes in it
 * @param data.fooBar
 * @param data.requestId
 * @returns unknown Ok
 * @throws ApiError
 */
export const testParameterWithDashAnUnderscore = (data: TestParameterWithDashAnUnderscoreData): CancelablePromise<TestParameterWithDashAnUnderscoreResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-parameter-with-dash-and_underscore/{path-param}',
    path: {
        'path-param': data.pathParam
    },
    headers: {
        headerInlineParam: data.headerInlineParam,
        'x-header-param': data.xHeaderParam
    },
    query: {
        foo_bar: data.fooBar,
        'request-id': data.requestId
    },
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.firstParam
 * @param data.secondParam
 * @returns unknown Ok
 * @throws ApiError
 */
export const testWithTwoParams = (data: TestWithTwoParamsData): CancelablePromise<TestWithTwoParamsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-two-path-params/{first-param}/{second-param}',
    path: {
        'first-param': data.firstParam,
        'second-param': data.secondParam
    },
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * when we declare parameters at path level
 * @param data The data for the request.
 * @param data.requestId
 * @param data.cursor An opaque identifier that points to the next item in the collection.
 * @returns unknown Ok
 * @throws ApiError
 */
export const testParametersAtPathLevel = (data: TestParametersAtPathLevelData): CancelablePromise<TestParametersAtPathLevelResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-path-level-parameter',
    query: {
        'request-id': data.requestId,
        cursor: data.cursor
    },
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * simply test of patch endpoint are considered
 * @returns unknown Ok
 * @throws ApiError
 */
export const testSimplePatch = (): CancelablePromise<TestSimplePatchResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/test-simple',
    errors: {
        500: 'Fatal error'
    }
}); };

/**
 * @returns unknown Will send `Authenticated`
 * @throws ApiError
 */
export const testCustomTokenHeader = (): CancelablePromise<TestCustomTokenHeaderResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-custom-token-header',
    errors: {
        403: 'You do not have necessary permissions for the resource'
    }
}); };

/**
 * @returns unknown Not found
 * @throws ApiError
 */
export const testWithEmptyResponse = (): CancelablePromise<TestWithEmptyResponseResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-with-empty-response'
}); };

/**
 * @param data The data for the request.
 * @param data.param
 * @returns unknown Ok
 * @throws ApiError
 */
export const testParamWithSchemaRef = (data: TestParamWithSchemaRefData): CancelablePromise<TestParamWithSchemaRefResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-param-with-schema-ref/{param}',
    path: {
        param: data.param
    }
}); };

/**
 * @param data The data for the request.
 * @param data.param
 * @returns unknown Ok
 * @throws ApiError
 */
export const testHeaderWithSchemaRef = (data: TestHeaderWithSchemaRefData): CancelablePromise<TestHeaderWithSchemaRefResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-header-with-schema-ref',
    headers: {
        param: data.param
    }
}); };

/**
 * @param data The data for the request.
 * @param data.param
 * @returns unknown Ok
 * @throws ApiError
 */
export const testHeaderOptional = (data: TestHeaderOptionalData = {}): CancelablePromise<TestHeaderOptionalResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-header-optional',
    headers: {
        param: data.param
    }
}); };

/**
 * @returns Person Ok
 * @throws ApiError
 */
export const testDates = (): CancelablePromise<TestDatesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/test-dates'
}); };